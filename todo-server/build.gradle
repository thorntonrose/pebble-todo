plugins {
    id "java"
    id 'org.springframework.boot' version '2.5.0'
}

group = 'com.pebblepost'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

	all {
		exclude  group: "org.springframework.boot", module: "spring-boot-starter-logging"
	}
}

repositories {
    mavenCentral()
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter-web:2.5.0"
	compile "org.springframework.boot:spring-boot-starter-data-jpa:2.5.0"

	testCompile "junit:junit:4.12"
	testCompile "org.apache.logging.log4j:log4j-slf4j-impl:2.8.1"
	testCompile "org.springframework.boot:spring-boot-starter-test:2.5.0"
	testCompile("org.junit.vintage:junit-vintage-engine") { exclude group: "org.hamcrest", module: "hamcrest-core" }

	runtime "org.apache.logging.log4j:log4j-core:2.8.1"
	runtime "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6"
	runtime "com.fasterxml.jackson.core:jackson-databind:2.8.6"
   runtime 'com.h2database:h2:2.1.212'
}

tasks.withType(Test) {
	dependsOn cleanTest
	ignoreFailures = true
	testLogging.maxGranularity = 0

	def results = []
	afterTest { desc, result -> println "${desc.className}.${desc.name}: ${result.resultType}" }
	afterSuite { desc, result -> if (desc.className) { results << result } }
	onOutput { dest, event -> print event.message }

	doLast {
		println "Tests: ${results.sum { it.testCount }}, Failures: ${results.sum { it.failedTestCount }}" +
			", Errors: ${results.sum { it.exceptions.size() }}, Skipped: ${results.sum { it.skippedTestCount }}"
	}
}
